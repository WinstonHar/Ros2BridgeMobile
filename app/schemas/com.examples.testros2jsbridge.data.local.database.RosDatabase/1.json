{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "9d02e104e7f8b31d88a192a4c1fa188c",
    "entities": [
      {
        "tableName": "configuration",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `rosServerUrl` TEXT NOT NULL, `defaultPublishTopic` TEXT NOT NULL, `defaultSubscribeTopic` TEXT NOT NULL, `userName` TEXT NOT NULL, `enableLogging` INTEGER NOT NULL, `reconnectOnFailure` INTEGER NOT NULL, `theme` TEXT NOT NULL, `connectionTimeoutMs` INTEGER NOT NULL, `maxRetryCount` INTEGER NOT NULL, `lastUsedProtocolType` TEXT NOT NULL, `messageHistorySize` INTEGER NOT NULL, `exportProfilePath` TEXT, `importProfilePath` TEXT, `joystickAddressingMode` TEXT NOT NULL, `language` TEXT NOT NULL, `notificationsEnabled` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "rosServerUrl",
            "columnName": "rosServerUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "defaultPublishTopic",
            "columnName": "defaultPublishTopic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "defaultSubscribeTopic",
            "columnName": "defaultSubscribeTopic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userName",
            "columnName": "userName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enableLogging",
            "columnName": "enableLogging",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reconnectOnFailure",
            "columnName": "reconnectOnFailure",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "theme",
            "columnName": "theme",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "connectionTimeoutMs",
            "columnName": "connectionTimeoutMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxRetryCount",
            "columnName": "maxRetryCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUsedProtocolType",
            "columnName": "lastUsedProtocolType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "messageHistorySize",
            "columnName": "messageHistorySize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "exportProfilePath",
            "columnName": "exportProfilePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "importProfilePath",
            "columnName": "importProfilePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "joystickAddressingMode",
            "columnName": "joystickAddressingMode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationsEnabled",
            "columnName": "notificationsEnabled",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "publisher",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `topic` TEXT NOT NULL, `messageType` TEXT NOT NULL, `message` TEXT NOT NULL, `label` TEXT, `isEnabled` INTEGER NOT NULL, `lastPublishedTimestamp` INTEGER, `presetGroup` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "messageType",
            "columnName": "messageType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "label",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isEnabled",
            "columnName": "isEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastPublishedTimestamp",
            "columnName": "lastPublishedTimestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "presetGroup",
            "columnName": "presetGroup",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "subscriber",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `topic` TEXT NOT NULL, `type` TEXT NOT NULL, `isActive` INTEGER NOT NULL, `lastMessage` TEXT, `label` TEXT, `isEnabled` INTEGER NOT NULL, `group` TEXT, `timestamp` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastMessage",
            "columnName": "lastMessage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "label",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isEnabled",
            "columnName": "isEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "group",
            "columnName": "group",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "connection",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `ipAddress` TEXT NOT NULL, `port` INTEGER NOT NULL, `protocol` TEXT NOT NULL, `isConnected` INTEGER NOT NULL, `lastError` TEXT, `authToken` TEXT, `lastReconnectAttempt` INTEGER, `messageCount` INTEGER NOT NULL, `serverName` TEXT, `timestamp` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ipAddress",
            "columnName": "ipAddress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "port",
            "columnName": "port",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "protocol",
            "columnName": "protocol",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isConnected",
            "columnName": "isConnected",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastError",
            "columnName": "lastError",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authToken",
            "columnName": "authToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastReconnectAttempt",
            "columnName": "lastReconnectAttempt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "messageCount",
            "columnName": "messageCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverName",
            "columnName": "serverName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '9d02e104e7f8b31d88a192a4c1fa188c')"
    ]
  }
}